diff --git a/src/test/org/apache/commons/lang/StringUtilsTest.java b/src/test/org/apache/commons/lang/StringUtilsTest.java
index 9c01308..e8b3773 100644
--- a/src/test/org/apache/commons/lang/StringUtilsTest.java
+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java
@@ -93,8 +93,8 @@ public class StringUtilsTest extends TestCase {
     }
 
     public static Test suite() {
-    	TestSuite suite = new TestSuite(StringUtilsTest.class);
-    	suite.setName("StringUtilsTest Tests");
+        TestSuite suite = new TestSuite(StringUtilsTest.class);
+        suite.setName("StringUtilsTest Tests");
         return suite;
     }
 
@@ -190,24 +190,39 @@ public class StringUtilsTest extends TestCase {
         assertEquals("split(Object[], null, int)[2] failed", "three four five six", result[2]);
     }
 
-    public void testReplaceFunctions() {
+    public void testReplaceFunctions_1() {
         assertEquals("replace(String, String, String, int) failed",
                      FOO, StringUtils.replace("oo" + FOO, "o", "", 2));
+    }
+    public void testReplaceFunctions_2() {
         assertEquals("replace(String, String, String) failed",
                      "", StringUtils.replace(FOO + FOO + FOO, FOO, ""));
+    }
+    public void testReplaceFunctions_3() {
         assertEquals("replaceOnce(String, String, String) failed",
                      FOO, StringUtils.replaceOnce(FOO + FOO, FOO, ""));
+    }
+    public void testReplaceFunctions_4() {
         assertEquals("carriage-return replace(String,String,String) failed",
                      "test123", StringUtils.replace("test\r1\r2\r3", "\r", ""));
-
+    }
+    public void testReplaceFunctions_5() {
         assertEquals("replace(String, String, String) failed",
             "FOO", StringUtils.replace("FOO", "", "any"));
+    }
+    public void testReplaceFunctions_6() {
         assertEquals("replace(String, String, String) failed",
             "FOO", StringUtils.replace("FOO", null, "any"));
+    }
+    /*public void testReplaceFunctions_7() {
         assertEquals("replace(String, String, String) failed",
             "FOO", StringUtils.replace("FOO", "F", null));
+    }
+    public void testReplaceFunctions_8() {
         assertEquals("replace(String, String, String) failed",
             "FOO", StringUtils.replace("FOO", null, null));
+    }*/
+    public void testReplaceFunctions_9() {
         assertEquals("replace(String, String, String) failed",
             null, StringUtils.replace(null, "", "any"));
     }
